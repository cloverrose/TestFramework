TestFramework

概要
Javaで文字列ベースのテストを行うモジュール
リフレクションを利用して特定のパッケージの下にあるクラスを取得し
そのクラスのテストメソッドを自動的に呼び出します。

ファイルについて
cloverrose直下に２つのディレクトリsampleとtestframeworkがあります。
sample以下のファイルはデモ用に作ったものです。
testframework以下のファイルがコアです。

TestFramework.javaがメインのクラス
ReflectionHelper.javaはTestFrameworkクラス内で
必要になるリフレクションを委譲したクラスです
Tester.javaは継承して実際にテストを記述するクラスです

デモによる使い方
テストの追加と一時中止にかかるコストを極力減らすために、
新しいテストクラスを追加した時に必要な記述はテスト本体である
makeInputString(),makeOututString(),mainWork()以外は
makeInstance()だけです。これはインスタンスを作って返すという１行で済みます。
cloverrose.sample.testframework.concrete.FiveTester.javaを見てください。

テストを呼び出すためには、パッケージの設定をして
テストメソッドを呼び出すだけです。
cloverrose.sample.testframework.Main.javaを見てください。

注意点
リフレクションを使っているためクラスパスに
tools.jarを追加しなければいけません。マシンによって違うとは思いますが、
java/jdk_version/lib/tools.jarなどにあると思います。
自分はEclipseを使用しているのでrun configrations...をクリックして
class pathに設定してます。setting-tools.jar.pngを参照


ライブラリとしての使い方
自分はEclipseでtestframework.jarというようにJarファイルを作って
他のプロジェクトのBuildPathに追加して使ってます。
ここで、他のプロジェクトのクラスパスにもtools.jarを設定するのを忘れないで下さい。

効率的なテストの作成
同じ処理に入力を変更していくつかテストしたい時は
mainWorkメソッドだけを実装した抽象クラスを作る
（具象テストクラスとは違うパッケージに配置すること！！）
そのクラスを継承したクラスで入力と出力のペアを記述。
